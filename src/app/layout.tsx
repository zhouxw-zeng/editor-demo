// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }

import "@/styles/globals.css";
import "@/styles/prosemirror.css";
import 'katex/dist/katex.min.css';

import type { Metadata, Viewport } from "next";
import { type ReactNode } from "react";
import { Providers } from "@/layouts/providers";
const title = "Editor Demo";
const description = "This is a Editor demo";
import HeaderMenu from "@/layouts/header/Menu"

export const metadata: Metadata = {
  title,
  description,
  openGraph: {
    title,
    description
  },
  // twitter: {} // no Twitter,
  // metadataBase: new URL("https://Avin-Z.com") // Not deployed netWork
}

export const viewport: Viewport = {
  themeColor: "#ffffff"
};

export default function RootLayout({ children }: { children: ReactNode }) {
  return (
    <html lang="cn" suppressHydrationWarning>
      <body>
        <Providers >
          <HeaderMenu/>
          <div className="pt-16 box-content">
            {children}
          </div>
          </Providers>
      </body>
    </html>
  );
}
  